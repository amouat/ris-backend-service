services:
  traefik:
    image: traefik:v2.9
    container_name: "traefik"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
  backend:
    image: gradle:7-jdk17
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`127.0.0.1`) && (PathPrefix(`/api`) ||  PathPrefix(`/actuator`) ||  PathPrefix(`/login`) ||  PathPrefix(`/oauth`))"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
      - "traefik.http.routers.backend.entrypoints=web"
    volumes:
      - ./:/app
    working_dir: /app
    environment:
      - SPRING_PROFILES_ACTIVE=local,compose
      - GH_PACKAGES_REPOSITORY_USER=${GH_PACKAGES_REPOSITORY_USER}
      - GH_PACKAGES_REPOSITORY_TOKEN=${GH_PACKAGES_REPOSITORY_TOKEN}
      - JAVA_OPTS=-XX:MaxDirectMemorySize=100M
    command: sh run.sh _start
    depends_on:
      - db
      - store-redis
  frontend:
    image: neuris/frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`127.0.0.1`)"
      - "traefik.http.routers.frontend.entrypoints=web"
    volumes:
      - ./frontend/src/:/usr/src/app/src
    environment:
      - BACKEND_HOST=http://127.0.0.1
    command: npm run dev -- --host
    depends_on:
      - backend

  db:
    image: postgres:12-alpine
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=neuris
      - POSTGRES_PASSWORD=test
      - POSTGRES_USER=test
    ports:
      - 5432:5432

  redis:
    image: 'redis:7.0.8'
    command: redis-server --requirepass password
    ports:
      - '6379:6379'
volumes:
  db-data:

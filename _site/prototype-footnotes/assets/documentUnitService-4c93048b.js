import{D as s,P as i}from"./documentUnit-2521476f.js";import{m as a}from"./index-086108b4.js";const o={async getAllListEntries(t,e){const n=await a.get(`caselaw/documentunits?pg=${t}&sz=${e}`);return n.status>=300&&(n.error={title:"Dokumentationseinheiten konnten nicht geladen werden."}),n},async getByDocumentNumber(t){const e=await a.get(`caselaw/documentunits/${t}`);return e.status>=300||e.error?e.error={title:"Dokumentationseinheit konnten nicht geladen werden."}:e.data=new s(e.data.uuid,{...e.data}),e},async createNew(t,e){const n=await a.post("caselaw/documentunits",{headers:{Accept:"application/json","Content-Type":"application/json"}},JSON.stringify({documentationCenterAbbreviation:t,documentType:e}));return n.status>=300?n.error={title:"Neue Dokumentationseinheit konnte nicht erstellt werden."}:n.data=new s(n.data.uuid,{...n.data}),n},async update(t){const e=await a.put(`caselaw/documentunits/${t.uuid}`,{headers:{Accept:"application/json","Content-Type":"application/json"}},t);return e.status>=300?(e.error={title:"Dokumentationseinheit konnte nicht aktualisiert werden."},e.status==400&&JSON.stringify(e.data).includes("Validation failed")&&(e.error.validationErrors=e.data.errors)):e.data=new s(e.data.uuid,{...e.data}),e},async delete(t){const e=await a.delete(`caselaw/documentunits/${t}`);return e.status>=300&&(e.error={title:"Dokumentationseinheit konnte nicht gelöscht werden."}),e},async searchByProceedingDecisionInput(t){const e=await a.put("caselaw/documentunits/search",{headers:{Accept:"application/json","Content-Type":"application/json"}},t);return e.status>=300&&(e.error={title:"Die Suche nach passenden Dokumentationseinheit konnte nicht ausgeführt werden"}),{status:200,data:e.data.map(n=>new i({...n}))}}},u=o;export{u as d};
